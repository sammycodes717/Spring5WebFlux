package com.learnings.app.resource;

import java.time.Duration;
import java.util.Date;
import java.util.stream.Stream;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.learnings.app.domain.Employee;
import com.learnings.app.domain.EmployeeEvent;
import com.learnings.app.repository.EmployeeRepository;

import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;
import reactor.util.function.Tuple2;

@RestController
@RequestMapping("/api")
public class EmployeeResource {

	private EmployeeRepository employeeRepository;

	public EmployeeResource(EmployeeRepository employeeRepository) {
		super();
		this.employeeRepository = employeeRepository;
	}

	/**
	 * Get all records of employee
	 * 
	 * @return
	 */
	@GetMapping("/all")
	public Flux<Employee> getAll() {

		return employeeRepository.findAll();
	}

	/**
	 * Get one record of employee
	 * 
	 * @param empId
	 * @return
	 */
	@GetMapping("/{id}")
	public Mono<Employee> getId(@PathVariable final String empId) {
		return employeeRepository.findById(empId);

	}

	public Flux<Employee> getEvents(@PathVariable final String empId) {
		
		
		return employeeRepository.findById(empId).
	}

		 
}
